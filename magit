#!/bin/sh

# Copyright (C) 2011 Peter J Weisberg.
#
# Magit is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# Magit is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Magit.  If not, see <http://www.gnu.org/licenses/>.
# ====================================================================

test "$1" = "-h" || test "$1" = "--help"
if [ $? = 0 ]; then
    cat <<EOF
Usage: magit [OPTION] [REPOSITORY]

Open a Magit session in Emacs visiting the specified repository.  If no
repository is specified, use the current directory.

    -h, --help          Print this text and exit
    -e, --use-existing  Use an existing Emacs frame instead of creating a new
                        one.  Requires that Emacs be running in server mode with
                        at least one visible frame.

If Emacs is running in server mode or if the ALTERNATE_EDITOR environment
variable is the empty string, emacsclient will be used.  Otherwise a new Emacs
session will be started.
EOF
    exit 0;
fi

# Don't allow non-empty alternate editor
env | grep ^ALTERNATE_EDITOR=$ > /dev/null
if [ $? != 0 ]; then
    ALTERNATE_EDITOR=false
fi

test "$1" = "-e" || test "$1" = "--use-existing"
if [ $? = 0 ]; then
    if [ -n "$2" ]; then
        dir=$(readlink -m "$2")
    else
        dir=$(pwd)
    fi
    emacsclient --eval "(progn (magit-status \"$dir\") nil)"
    exit
fi

if [ -n "$1" ]; then
    dir=$(readlink -m "$1")
else
    dir=$(pwd)
fi

runmagit="(progn (magit-status \"$dir\")
                 (delete-other-windows))"

if [ "$DISPLAY" ]; then
    ec_err=$(emacsclient --eval "(progn (select-frame (make-frame-on-display \"$DISPLAY\"))
                                         $runmagit)" 2>&1)
    runemacs=$?
    if [ $runemacs = 0 ]; then
        echo $ec_err | grep "Don't know how to create a frame on window system" > /dev/null
        #^Above is what you get when $DISPLAY is set but emacs was built without X support.
        if [ $? = 0 ]; then
            emacsclient --tty --eval "$runmagit"
            runemacs=$?
        fi
    fi
else
    emacsclient --create-frame --eval "$runmagit" 2>/dev/null
    runemacs=$?
fi

if [ $runemacs != 0 ]; then
    #Server not running or emacsclient not usable
    emacs --eval "$runmagit"
fi
