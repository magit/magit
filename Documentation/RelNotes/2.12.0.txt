Magit v2.12.0 Release Notes (unreleased)
========================================

Upcoming breaking changes
-------------------------

* The option `magit-no-confirm-default' has been demoted to a variable
  and will be removed in v2.13.0.  Please migrate your customizations
  to the new option `magit-dwim-selection'.  #3232

Changes since v2.11.0
---------------------

* Added new commands `magit-previous-line' and `magit-next-line' as
  substitutes for `previous-line' and `next-line'.  Magit's selection
  mechanism is based on the region but selects an area that is larger
  than the region.  This causes shift-selection to select two lines on
  the first invocation when using the vanilla commands.  On section
  headings and inside hunk bodies the new magit-specific variants
  don't move point on the first invocation and thereby they only
  select a single section or line.  Which inconsistency you prefer
  is a matter of preference.  #2912

  To use the Magit-specific variants add this to your init file:

    (define-key magit-mode-map [remap previous-line] 'magit-previous-line)
    (define-key magit-mode-map [remap next-line] 'magit-next-line)

* The command `magit-refs-popup' now remembers arguments and they are
  displayed in the header-line of `magit-refs-mode' buffers.  The popup
  command still invokes the default action by default when invoked from
  another buffer, but when invoked from a `magit-refs-mode' buffer it
  now shows the popup.  #2898

* Added new command `magit-branch-or-checkout' as a potential
  substitute for `magit-checkout'.  Setup instructions can be found in
  the manual.  #3104

* Added new customizable options `magit-log-highlight-keywords' and
  `magit-diff-highlight-keywords' which control whether text inside
  brackets is highlighted in magit-log and magit-diff buffers
  respectively.  #3190

* When the names of Magit buffers are not uniquified then their names
  now end with an asterisk.  When the `uniquify' package is used, then
  that still is not possible due to limitations in that package.  #2841

* Added the existing commands `magit-blame' and `magit-blob-next' to
  the `magit-file-popup'.

* Added new command `magit-blame-reverse'.  See the updated manual
  for information on how to best use this and other blaming commands.
  #3055

* Keywords in brackets are now being highlighted in `magit-refs-mode'
  buffers like they already were in logs.  #3179

* Added new variable `magit-buffer-lock-functions' to support
  third-party packages in creating Magit-like buffers.  #3191

* Added new command `magit-rebase-remove-commit' to the rebase popup.

* The remote popup can now be used to set various remote related
  variables.  #3165

* Added new commands `magit-patch-apply' and `magit-patch-apply-popup'.
  The latter is available from inside `magit-am-popup' ("w").  #2940

* Added new command `magit-patch-save' for saving a diff into a patch
  file.  In diff buffers it is bound to "C-x C-w".  #2950

* Added new command `magit-stash-branch-here', which — unlike the
  existing `magit-stash-branch' — creates a branch that starts at
  the current HEAD instead of at the commit that was current when
  the stash was created.  #2935

* Added new command `magit-dired-log' intended to be bound in
  `dired-mode-map'.  #3011

* The list of rebase actions displayed in the status buffer now also
  shows "exec" actions.  #3003

* While it exists, the stash created by `git rebase --autostash' is
  now also displayed in the list of stashes.  #3146

* When the current branch has no upstream or when all commits have
  already been pushed there, then the status buffer now shows
  `magit-log-section-commit-count' recent commits.  If you previously
  used `magit-insert-unpulled-from-upstream-or-recent', then remove
  that from `magit-status-sections-hook', as it is an obsolete alias
  for `magit-insert-unpulled-from-upstream' now.  #3227

* When switching between showing "Unmerged into <upstream>" and
  "Recent commits", preserve the visibility of that section.  #3227

* When prompting for a branch to delete, the default branch is no
  longer offered as default choice, except in cases where it is likely
  that that is actually what the user wants.  #2924

* Added new popup `magit-worktree-popup' and bound "%" to it.  #2927

* The commands `magit-file-delete' and `magit-file-untrack' now act on
  the selected files and with a prefix argument they force the action.
  #2930

* When requesting the history of a single file that is no longer being
  tracked, use the `--full-history' argument.  Otherwise no history at
  all would be shown.  #3012

* Leading tabs in files no longer cause misalignment in diffs.  This
  is done by overriding the mechanism used by the display engine to
  determine how width a tab should be, which doesn't work when there
  are additional characters before the "leading" tabs that should
  count as an additional, but very short tab-stop.  #3185

* The command `magit-visit-ref' now drops the prefix argument before
  calling `magit-show-commit' when appropriate, and when using the
  `create-branch' variant and the branch exists, then it offers to
  simply checking it out instead of resetting it first.  #3009

* For a long time Magit has supported selecting two or more sibling
  sections using the region and then acting on that selection instead
  of only on the current section.  Single-section selections were not
  supported and a region that did not span multiple siblings was not
  visualized as a selection.  Not every section-aware command was
  adjusted to take single-section selections into account because in
  many cases that would have lead to undesired changes in behavior.
  #3026

* The command `magit-branch-spinoff' now spins off just HEAD when that
  constitutes the single-section selection.  Previously one could only
  spin off all commits that weren't in the upstream yet or at least
  two commits.  #2920

* When there is a valid selection based on the region, then the region
  itself was never visualized.  Now it is, but only if it stays within
  a single line.  #3249

* Added new command `magit-branch-checkout' and bound "l" in the
  branch popup to it.  This command always checks out a local branch.
  Valid inputs are an existing local branch, a remote branch for which
  no corresponding local branch exists, and a new branch name that
  doesn't match the name of any existing local or remote branch.  #2906

* The command `magit-show-commit' now offers the revision at point as
  the default completion choice if the less generic mechanisms used to
  determine the "current" revision fail.  This is useful for visiting
  revisions mentioned in commit messages.  #2949

* Hashes inside commit messages are now turned into `commit' sections.
  Note that this can be disabled and that even if you do so you can
  still visit the commit at point using "RET".  #2949

* The documentation regarding completion, confirmation, the selection,
  and the hunk-internal region were significantly extended.  It might
  be worth reading that.

* Added new option `magit-dwim-selection', which allows configuring
  commands that would otherwise ask the user to select among possible
  candidates to use the default instead, with or without confirmation.
  #3232

* When there is a stash at point, then the commands `magit-stash-drop'
  and `magit-stash-pop' now ask for confirmation.  The former command
  previously allowed users to select another stash instead and the
  latter used to act on the stash at point without giving the user a
  chance to abort.  These changes are implemented using the new option
  `magit-dwim-selection' and can easily be reverted.  #2916

* Aborting a commit is seen as an error by Git and like all such
  errors it was reported to users, which led to confusion and a few
  bug reports.  Now that non-error is being suppressed.  #2932

* The option `magit-ref-namespaces' was demoted to a variable and its
  format changed.  #2923

* Some refs that are being displayed in logs are now being compressed
  to save space while providing more information.  #2923

* The command `magit-show-commit' now also show notes specified using
  `notes.displayRef', not just those specified using `core.notesRef'.
  #2857

* The popup `magit-notes-popup' now shows the values of the relevant
  variables and allows changing them.  #2857

* The command `magit-log-buffer-file' now also works in Dired buffers.

* Added command `magit-browse-pull-request', which reads an open pull
  request and then visits it in a browser.  For now this only supports
  Github, but other Git forges will be supported in the future.  #3134

* Added new commands `magit-checkout-pull-request' and
  `magit-branch-pull-request' to the branch popup.  For now they only
  support Github, but other Git forges will be supported in the future.
  #3134

* The command `magit-branch-delete' now offers to also delete the
  corresponding remote after deleting a local branch that was created
  with `magit-branch-pull-request' or `magit-checkout-pull-request',
  provided that remote has no other tracking branches.  #3134

* The mode line process indicator, displayed in the mode line when Git
  is run for side-effects, is now more visible than before, and is
  additionally used to highlight process errors.

  New face `magit-mode-line-process' is applied to the mode line
  process indicator to improve the visibility of pending asynchronous
  processes (in particular), as Magit remains responsive after
  initiating such commands (for instance fetching or rebasing), but
  will not update its buffers until the process has completed, which
  might take longer than anticipated.  Customize this face if you wish
  to make this indicator more (or less) visible.  #3284

  If the Git process returns an error, the mode line process indicator
  is no longer removed, and new face `magit-mode-line-process-error`
  is applied to highlight the error status.  Details of the error from
  the process buffer are also provided as a tooltip.  The error
  indicator will remain visible in the mode line until a magit buffer
  is refreshed.  If you do not want errors to be indicated in the mode
  line, customize the `magit-process-display-mode-line-error' user
  option.  #3297

* When staging and unstaging at the file level and there are arguments
  that cause whitespace differences to be hidden, then apply the
  visible changes using `git-apply' instead of using `git-add' and
  `git-rm' because doing that would also un-/stage the invisible
  changes.  #3102

* Added new command `magit-diff-visit-file-other-window'.  It isn't
  bound by default because that would result in changes to existing
  key bindings, which is something that is frowned upon.  To use this
  command add something like this to your init file.  #2833

    (define-key magit-file-section-map (kbd "SPC")
      'magit-diff-visit-file-other-window)
    (define-key magit-hunk-section-map (kbd "SPC")
      'magit-diff-visit-file-other-window)

* The widths of tabs in diffs can now be adjusted to match the widths
  that would be used in the corresponing file-visiting buffers.  This
  is disabled by default because it can be expensive to determine the
  appropriate values (and also unnecessary when using spaces for
  intendation).  Use the new option `magit-diff-adjust-tab-width' to
  control if and when the tab widths should be adjusted.  #2929

* In the references buffer the remote part of the branch names are now
  hidden in the remote specific lists of branches by default, which is
  done to preserves space.  The option `magit-refs-show-remote-prefix'
  can be used to revert this change.

* The commands `magit-remote-remove' and `magit-branch-delete' now
  unset the relevant push-remote related variables, which Git fails to
  do, unlike for other variable affected by the removal of a remote or
  branch.  #2850

* Likewise the command `magit-remote-rename' now renames such
  variables.  #2850

* Depending on the value of the new `magit-branch-rename-push-target'
  option the command `magit-branch-rename' may now also preserve the
  local branch's push-remote or even rename the push branch on the
  remote.  The default is to do both.  #2850

* The section visibility is now being cached for all sections.
  Previously this was only done for some sections.  When a section
  disappeared and later appeared again, then it went back to its
  initial visibility.  The option `magit-section-cache-visibility' can
  be used to restrict the cache to certain sections again.  #2780

* The section visibility cache can now also remember that a section
  should be expanded instead of being hidden when the latter is the
  default and the section reappears.  Previously only the opposite
  was possible.  #2780

* For `magit-status-mode' and `magit-refs-mode' buffers the visibility
  cache now persists when killing the buffer.  #2780

* Added command `magit-remote-prune-refspec', which is necessary
  because Git does not ignore invalid refspecs and instead refuses
  to fetch using only the refspecs that are still valid.  #3134

* The terminology about modules as used by Git is ambigious.  Magit
  now avoids the term "initialized" and instead uses the term
  "populated" to refer to a module whose working directory exists.
  The names of commands have been adjusted accordingly.  For example,
  unlike "git submodule init", which does *not* actually "initialize"
  a module, `magit-submodule-popuplate' does "populate" a module
  (using "git submodule update --init").  #2911

* Most module commands now default to act on the selected modules or
  if no modules are selected the current module, if any.  Otherwise
  they fall back to read a single module from the user.  Previously
  some of these commands acted on all modules and it was not possible
  to perform the respective actions on a subset of modules.  Acting
  on all suitable modules is still possible using a prefix argument.
  #2911

* Many arguments have been added to the module popup.  #2911

* Added option `magit-refs-filter-alist', which allows omitting some
  references from being displayed in `magit-refs-mode' buffers.

* Added commands `magit-merge-absort' and `magit-merge-into', which
  not only merge a local branch into another but also remove the
  merged branch.  #2922.

Fixes since v2.11.0
-------------------

* `git-rebase-mode-show-keybindings' failed to process non-English
  usage instructions in interactive rebase buffers.  #3175

* Fixup commands did not warn about merges in the rebase range until
  after creating the fixup commit.  #3176

* Instant fixup allowed selecting a commit that is not reachable from
  HEAD, which, for the instant variants (but only those), clearly is
  a user mistake that should be caught immediately.  #3176

* The command `magit-branch-rename' failed to rename a local branch if
  a tag existed with the same name.  #3222

* The command `magit-file-delete ignored' the prefix argument instead
  of forcing the action as intended.

* Fixed encoding of non-ascii filename arguments to git on
  `windows-nt' systems.  #3250

* The command `magit-worktree-delete' failed to delete a worktree when
  its directory no longer existed.  #3355
