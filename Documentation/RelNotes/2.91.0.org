* Magit v2.91.0 Release Notes (unreleased)
** Breaking changes

- Dropped support for Git v2.0 and v2.1.

- After some users intervened I have decided to NOT drop support for
  Emacs 25 in this release as I had intended to do.  Emacs 25 should
  remain supported for at least a few more releases.

- Magit now uses Transient instead of Magit-Popup.
  https://emacsair.me/2019/02/14/transient-0.1/

- The commands ~magit-branch-pull-request~, ~magit-checkout-pull-request~
  and ~magit-worktree-checkout-pull-request~ were removed in favor of
  improved implementations provided by the new Forge package.

- ~C-c C-e~ is no longer bound to ~magit-dispatch-popup~.  It is bound to
  ~magit-edit-thing~ now, so that Forge can add section-specific
  bindings using this key.  ~magit-dispatch-popup~ has been renamed to
  ~magit-dispatch~ and continues to be available on ~h~, ~?~ and ~C-c C-c~.
  #3659

- ~C-c C-b~ is no longer bound to ~magit-browse-thing~ to avoid a conflict
  with ~magit-go-backward~ in diff and log buffers.  ~C-c C-w~ (as in web)
  is used instead now.  #3659

- The option ~magit-display-file-buffer-function~ was removed.  8a214c9fb

- The buffer-local variable ~magit-refresh-arguments~ was replaced with
  several variables because ~(nth N magit-refresh-arguments)~ just isn't
  very informative.  Several related API functions had to be changed
  in incompatible ways.  This was done by adding new functions and
  keeping the old variable and functions around for backward
  compatibility.  Packages using the obsolete variable and functions
  should be adjusted soon.  #3836

** Changes since v2.90.0

- It isn't always obvious that a section can be expanded, especially
  to users who are just getting started with Magit.  Mainly to make
  it easier for those users, expandable and collapsable sections now
  get an indicator in the fringe.

  The new option ~magit-section-visibility-indicator~ can be used to
  disable this or to select the alternative style, which shows an
  ellipsis at the end of the heading of each expandable section
  instead.  #3679

- Added ~bug-reference-mode~ to ~git-commit-setup-hook~.  e19e8fb1e

- The "Version" column in ~magit-submodule-list-mode~ and
  ~magit-repolist-mode~ buffers now shows when a repository is dirty.
  0b86dbfd6

- Added new command ~magit-log-merged~.  This command requires
  ~git-when-merged~ (https://github.com/mhagger/git-when-merged).
  It is a suffix of ~magit-log~ but is disabled by default.  #3657

- Added new class slot ~keymap~ to allow other packages to define
  section-specific keymaps without naming them ~magit-TYPE-section-map~,
  which would mean using a symbol prefix (~magit-~) that does not match
  the package name.

- Added new option ~magit-diff-refine-ignore-whitespace~, overriding and
  defaulting to the value of ~smerge-refine-ignore-whitespace~.  #3671

- Added new option ~magit-diff-paint-whitespace-lines~, which controls
  in what kind of lines (added/removed/context) whitespace errors are
  highlighted.  #3671

- It is now possible to show whitespace errors only in uncommitted
  changes by setting ~magit-diff-paint-whitespace~ to ~uncommitted~.  The
  obsolete value ~status~ is treated as a synonym.  The intention always
  was to allow limiting to uncommitted changes and limiting to changes
  shown in the status buffer was the closest approximation readily
  available when this feature was first added.  #3671

- The commands ~magit-commit-instant-fixup~, ~magit-commit-instant-squash~
  and ~magit-rebase-autosquash~ now unconditionally preserve empty
  commits that were already present before the autosquash rebase
  performed by these commands.  This is the safe default; if you want
  to drop such commits, then you have to enable ~--autosquash~ in the
  popup and then invoke ~magit-rebase-interactive~.  #3670

- The option ~magit-repository-directories~ defaults to ~nil~ again
  because the non-nil default added in v2.90.0 led to surprising
  changes in behavior.  The documentation of this option and the
  related ~magit-status~ command were made less ambiguous.  #3673

- Renamed the face ~git-commit-note~ to ~git-commit-keyword~ because that
  is what text in brackets is called elsewhere in Magit and because
  the term "note" was ambiguous in this context.  The old face name
  is still defined as an alias, but that will be removed eventually.

- The command ~magit-worktree-checkout~ now also offers tags and remote
  branches as completion candidates.  #3692

- The command ~magit-commit-reword~ now always uses ~--allow-empty~
  because when you reword an empty commit, then you have already
  confirmed that you are okay with that commit being empty.

- The new buffer-local variable ~git-commit-need-summary-line~ can
  be of use if you want to write Git notes without separating the
  first line with an empty line from the rest of the text.  #3676

- The command ~magit-copy-section-value~ now removes the +/- diff
  marker column when a prefix argument is given and the region is
  active within a hunk.  #3716

- Made ~magit-tag-release~ more flexible and added it as a suffix of
  ~magit-tag~.  2d14f84b2

- Bound "C-c C-o" (in addition to "C-c C-w") to ~magit-browse-thing~ for
  consistency with ~org-open-at-point~'s binding.  1e1193666

- ~magit-copy-section-value~ now supports stripping diff markers.  #3716

- ~magit-insert-*-branch-header~ now colorizes keywords in the message.
  98e328200

- ~magit-unstage~ can now unstage files that were staged using
  ~--intent-to-add~.  #3753

- ~magit-read-branch-or-commit~ now offers symbolic refnames such as
  ~ORIG_HEAD~ as completion candidates.   #3766

- ~magit-stage-modified~ and ~magit-unstage-all~ now take the log file
  filter into account.  #3767

- New command ~magit-skip-worktree~ can be use to tell Git to pretend
  that the working tree version is up-to-date; ~magit-no-skip-worktree~
  does the opposite.  Both commands are available from the
  ~magit-gitignore~ prefix but are disabled by default.  #3710

- ~--rebase-merges~, an option available in Git version 2.18.0 and
  later, is now supported.  The ~--rebase-merges~ infix of
  ~magit-rebase~ is disabled by default.  #3762

- New command ~git-rebase-break~ inserts a "break" action in the
  rebase to-do sequence (available as of Git v2.20).  #3762

- The ~--color-moved~ diff argument is supported now, but isn't
  available from the diff transients by default.  To enable it
  use "C-x l" in those transients.  #3424

- Added new option ~magit-revision-filter-files-on-follow~ that
  controls whether a revision buffer shown from a log shares the log's
  file restriction despite ~--follow~ being in the log arguments.
  #3680

- ~magit-cherry~ is now available from the ~magit-dispatch~ prefix.
  ef311f378

~ ~magit-cherry-spinoff~ now offer the upstream as the default
  starting-point.  e5a2a0ac2

- Added new command ~magit-branch-spinout~.  #3794.

- ~magit-process-password-auth-source~ now allows the use of emails as
  usernames.  05d82d501

- Added new option ~magit-prefer-push-default~, which controls whether
  commands that configure the push-remote do so by setting the value
  of ~remote.pushDefault~ or ~branch.<name>.pushRemote~.  Also removed
  option ~magit-remote-set-if-missing~.  07ca042b6

- Support for bookmarks was rewritten from scratch.  #3836, cd391a035

- The new options ~magit-prefix-use-buffer-arguments~ and
  ~magit-direct-use-buffer-arguments~ replace the old option
  ~magit-use-sticky-arguments~.  The default "stickiness" of arguments
  has changed.  #3836, 0e67ca9eb

- Like when moving through a log, moving through a list of cherries
  now automatically updates the revision or blob buffer.  #3836

- Added new option ~magit-worktree-read-directory-name-function~.  #3820

- TODO Added basic support for libgit2.  #3841

- ~git bisect~ is now run asynchronously.  #3802

- ~magit-branch-or-commit-at-point~ now falls back to an abbreviated
  hash instead of something like "master~2", because the latter often
  leads to undesirable behavior.  fd5eb5b43

- ~magit-toggle-buffer-lock~ is now a suffix of both ~magit-diff~ and
  ~magit-log~.  c09993112

- When invoked with a prefix argument, then ~magit-clone~ now acts as a
  prefix command.  If the new option ~magit-clone-always-transient~ is
  non-nil, then it always acts as a prefix command.  #3846

- Clone commands now accept repository names and similar abbreviations
  in addition to complete urls.  The new options ~magit-clone-name-alist~
  and ~magit-clone-url-format~ control how the translation is done.  #3846

- When called from ~magit-dispatch~, then ~magit-diff~ and ~magit-log~ no
  longer set the file limit to the file visited in the current buffer.
  ccc72469e

- ~RET~ (~magit-diff-visit-file~) on a committed change now always visits
  the respective commit.  Previously it did that for all commits
  except the ~HEAD~ commit.  This made it impossible to visit the ~HEAD~
  commit using this or a related command and also was inconsistent.
  ~C-RET~ (~magit-diff-visit-worktree~) should be used to visit the file
  in the working tree for any commit.  Setting the new option
  ~magit-diff-visit-avoid-head-blob~ to a non-nil value restores the
  old behavior of ~magit-diff-visit-file~.  #3848

- ~magit-diff-visit-worktree~ now does a much better job at jumping to
  the correct location in the file.  c9e5425cd

- Added new command ~magit-find-file-other-frame~.  9a69c74ca

- Renamed command ~magit-diff-visit-file-worktree~ to
  ~magit-diff-visit-worktree-file~.  4f739cd35

- Added new commands ~magit-diff-visit-file-other-frame~,
  ~magit-diff-visit-worktree-file-other-window~, and
  ~magit-diff-visit-worktree-file-other-frame~.  756d61911, 6704b3248

- Added new option ~magit-process-prompt-functions~.  #3845

- ~magit-find-file~ is now available from ~magit-file-dispatch~.
  9c587d458

- ~magit-find-file~ and related commands learned to visit a file from
  the worktree or index.  #3860

- ~magit-find-file~ and related commands learned to go to the position
  in the visited file that corresponds to the position in the
  previously current buffer.  #3860

- ~magit-diff-buffer-file~ learned to visit a commit instead of a range
  when appropriate.  #3860

- ~magit-show-commit~ and ~magit-diff-buffer-file~ learned to go to the
  position in the diff that corresponds to the position in the
  previously current file-visiting buffer.  #3860

- Added new command ~magit-blob-visit-file~.  When visiting a blob, then
  it goes to the same location in the respective file in the working
  tree.  #3860

- ~magit-tag-release~ now runs ~git~ asynchronously.  #3855

- When invoked with two prefix arguments, then ~magit-mode-burry-buffer~
  now also kills all other Magit buffers associated with the current
  repository.  #3863

- Magit buffers are now compatible with ~whitespace-mode~ (and other
  modes which use font lock).  #3840


** Fixes since v2.90.0

- Bumped the minimal required version of ~git-commit~ to the correct
  version.  e9bd33758

- Dropped the new "v" prefix that we started to add to release tags
  starting with the previous release in places where that prefix is
  undesirable.  f441cf6d7

- Staging and unstaging submodules while ~diff.submodule~'s value is ~log~
  broke shortly before the v2.90.0 release.  #3654

- When another window is already displaying the file buffer, then
  ~magit-display-file-buffer-other-window~ did additionally display
  it in the current window.  #3662

- It was undefined whether highlighting of word-granularity
  differences or of whitespace-error had higher priority.  #3671

- The Custom type definition of ~magit-diff-adjust-tab-width~ was
  broken.  #3671

- In the log-select buffers point was no longer placed on the same
  commit as was at point in the buffer from which the command was
  invoked.  #3674

- ~magit-diff-type~ falsely concluded that a diff buffer showed
  unstaged changes when diffing a range where the right side resolves
  to the same commit as ~HEAD~.  #3666

- ~magit-log-trace-definition-function~ defaulted to ~which-function~,
  which isn't reliable because it used Imenu, which uses a cache but
  by default never invalidates.  Now we use ~magit-which-function~, a
  replacement that never uses an outdated cache.

- ~magit-log-trace-definition~ didn't account for Git treating "-"
  differently from e.g. "_", leading to false-positives like
  "foo-suffix" being considered a match for "foo".

- A regression in ~magit-log-move-to-parent~ prevented it from doing its
  job.  #3682

- ~magit-clone~ didn't run ~magit-credential-hook~.  #3683

- ~magit-list-repositories~ failed if one of the repositories that it
  tries to list is empty.  #3686

- The summary element from ~git-commit-font-lock-keyword-1~ lost against
  the elements of ~git-commit-elisp-text-mode-keywords~, causing the
  summary line to lose its special appearance when a "string" or
  `symbol' appears in it.

- ~magit-split-branch-name~ did not take into account that remote names
  can contain slashes.  #3685

- ~magit-which-function~ now simply resets Imenu's cache and then calls
  ~which-function~.  The old approach that tried to outsmart Imenu was
  broken.  #3691

- ~magit-describe-section-briefly~ did not actually display a section
  ident when called interactively, as the docstring claimed.  Now it
  displays the section ident, which is useful in
  ~magit-status-initial-section~.

- Section movement commands got confused by type change sections being
  treated as a special kind of hunk.  #3698

- ~x-strech-cursor~ was set globally.  #3707

- ~magit-blame-echo~ was broken.  #3720

- ~magit-rev-name~ sometimes returned ~nil~ even when it could return a
  name and it returned e.g. "origin/HEAD" instead of "origin/master".
  2042957a7, d500c442

- ~magit-insert-*-branch-header~ did not account for empty commit
  messages.  #3719

- ~magit--painted-branch-at-point~ failed in some cases, causing an
  error.  e7e612e3c

- In newer Git versions the rebase list shown in the status buffer
  could contain duplicated entries for the current commit.  1e1cd0e28

- When deleting a remote branch failed, the logic for deciding whether
  to prune the local remote-tracking ref was too loose, leading to
  false positives.  #3650

- ~magit-ediff-state~ offered untracked files as completion candidates
  even though it cannot handle those.  8dd612dfb

- Fix handling of passphrase prompts which are output with leading
  carriage return, such as those produced by Openssh 8.0.  #3843

- The default value for ~magit-view-git-manual-method~ was treated as
  invalid.  #3873

- Various bug fixes to ~magit-branch-delete~ (3e73ff19d),
  ~magit--{upstream,pushbranch}-suffix-predicate~ (0ce7fbbc2),
  ~magit-patch-create~ (470272a0f), ~magit--cherry-spinoff-read-args~
  (add276810), ~magit-refs--insert-cherry-commits~ (3b37e6dc1),
  ~magit--{pushbranch,upstream}-suffix-predicate~ (cef3b1217),
  ~magit-diff-insert-file-section~ (01cf0c165),
  ~magit-insert-unpushed-to-upstream-or-recent~ (02445d6e3),
  ~magit-ref-equal~ (46862d9d2), ~magit-ref-fullname~ (66b85daea),
  ~magit-insert-unpulled-from-upstream~ (0363e9bac), ~magit-git-version~
  (0abc761f5), ~auto-revert-buffers--buffer-list-filter~ (713bd64bf),
  ~magit-insert-revision-gravatar~ (1f7e84c26) and
  ~magit-process-unset-mode-line~ (457a685e5).
