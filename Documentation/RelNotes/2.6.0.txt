It's Magit!  A Git Porcelain inside Emacs
=========================================

Magit is an interface to the version control system Git, implemented
as an Emacs package.  Magit aspires to be a complete Git porcelain.
While we cannot (yet) claim that Magit wraps and improves upon each
and every Git command, it is complete enough to allow even experienced
Git users to perform almost all of their daily version control tasks
directly from within Emacs.  While many fine Git clients exist, only
Magit and Git itself deserve to be called porcelains.

For more information about Magit, see http://magit.vc.

Magit v2.6.0 Release Notes (draft)
==================================

Updates since v2.5.0
--------------------

* Added a cache, which memorizes the values of some function calls for
  the duration of a refresh.  This cuts the calls to git in half.

* Added new command `magit-diff-buffer-file-popup' intended for use in
  file-visiting buffers.  It shows the same popup as `magit-diff-popup'
  but starts out already limited to the visited file.

* Added new command `magit-push-refspecs', which allows pushing using
  one or more comma-separated and refspecs, which are explicitly typed
  in the minibuffer.

* Added new commands `magit-fetch-refspec' and `magit-fetch-branch'.

* Added new command `magit-reset-popup' featuring all the available
  reset variants.

* Added new section inserters
  `magit-insert-modules-unpulled-from-pushremote' and
  `magit-insert-modules-unpushed-to-pushremote', and renamed
  `magit-insert-unpulled-module-commits' to
  `magit-insert-modules-unpulled-from-upstream' and
  `magit-insert-unpushed-module-commits' to
  `magit-insert-modules-unpushed-to-upstream'.

* If `magit-push-current-set-remote-if-missing's value is `default',
  then the command `magit-push-current-to-pushremote' now offers to
  set `remote.pushDefault' unless the push-remote is already set in
  some way.  Previously this command offered to set the local value
  `branch.NAME.pushRemote' for all non-nil values of the option.

* Command `magit-submodule-add' now allows using a module name
  different from the path of the module.

* When washing the diff that is to be displayed while writing a
  commit message takes too long, then it is now possible to abort that
  by pressing `C-g'.  Previously that would have aborted the commit.

* When `magit-process-raise-error' is non-nil, then the displayed
  error message now also mentions the `default-directory', which is
  useful when using Magit as a library in another packages that runs
  git in many different repositories.

Fixes since v2.5.0
------------------

* If the user sets the variable `magit-auto-revert-mode' or the
  obsolete alias `magit-revert-buffers' to nil anytime during startup,
  before or after `magit-autorevert' is loaded, then the mode is not
  turned on (actually it is explicitly turned off).

* `magit-insert-unpulled-from-pushremote' and
  `magit-insert-unpushed-to-pushremote' missed an edge case when
  checking whether their section should be inserted into the status
  buffer.

* `magit-clone' did not switch to the cloned repo before trying to
  delete the symbolic-ref "origin/HEAD".

* `magit-diff-wash-submodule did not handle some less common cases.

* `magit-merge-preview' did not recognize sections for added or
  deleted files.

* `magit-run-git-with-input' had stopped calling
  `magit-pre-call-git-hook' and logging its git command to the
  magit-process buffer.

* When a revision buffer was limited to a set of files, its header
  line did not say so.

* On `windows-nt' systems, having `mount' in `exec-path' caused Magit
  to assume that git is from Cygwin.

* Invoking `magit-commit-popup's default action failed due to a typo.

* `magit-section-cycle-diffs' hung when hiding sections.

* Staging hunks/regions belonging to files with CRLF line endings on
  Windows (or, to be precise, when the Magit status buffer uses CRLF
  end-of-line style) ended up erroneously staging changes with LF line
  endings. Magit now tries harder to not mangle line endings. A new
  variable `magit-preserve-crlf-line-endings' has been added to allow
  disabling the new behavior, should it cause unforseen troubles.

This release also contains documentation updates.

Authors
-------
